# Copyright(c) Microsoft Corporation.
# Licensed under the MIT License.

name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('**/requirements.txt') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Check code formatting
      run: |
        ruff format --check src tests

    - name: Run linting
      run: |
        ruff check src tests

    - name: Run type checking
      run: |
        mypy src

    - name: Run tests with coverage
      run: |
        pytest --cov=onemcp --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  sandbox-test:
    runs-on: ubuntu-24.04
    needs: test
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}-${{ hashFiles('**/requirements.txt') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Install Docker (if not present)
      run: |
        if ! command -v docker &> /dev/null; then
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker $USER
        fi

    - name: Manual sandbox test (as described in task)
      run: |
        # Start sandbox server in background
        export USE_HEURISTIC_DISCOVERY=true
        python3 -m src.onemcp.sandbox --host localhost --port 8080 &
        SERVER_PID=$!

        # Wait for server to start
        sleep 10

        # Test the discover endpoint
        DISCOVER_JSON=$(python3 -c "import json; print(json.dumps({'repository_url': 'https://github.com/githejie/mcp-server-calculator'}))")

        echo "Testing sandbox with DISCOVER request..."
        response=$(curl -s -w "%{http_code}" -X POST \
          --header "Content-Type: application/json" \
          --header "X-OneMCP-Message-Type: DISCOVER" \
          --data "${DISCOVER_JSON}" \
          http://localhost:8080/sandbox)

        echo "Response: $response"

        # Test health endpoint
        echo "Testing health endpoint..."
        health_response=$(curl -s http://localhost:8080/health)
        echo "Health response: $health_response"

        # Clean up
        kill $SERVER_PID || true
        wait $SERVER_PID 2>/dev/null || true

        echo "Sandbox test completed successfully"
